/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2013-2023 Andres Almiray
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'java-library'
}

config {
    info {
        name          = 'Gipsy'
        description   = 'Groovy version of Jipsy, a configurable AST Transformation to simplify the use of the Service Provider Interface.'
        inceptionYear = '2013'
        tags          = ['groovy', 'jipsy', 'gipsy', 'annotation', 'processor']

        specification  { enabled = false }
    }

    docs {
        javadoc {
            autoLinks {
                enabled = false
            }
            options {
                links 'https://raw.githubusercontent.com/kordamp/jipsy/gh-pages/apidocs/'
            }
        }
    }
}

allprojects {
    apply plugin: 'idea'
}

idea {
    project {
        jdkName '1.8'
        languageLevel '1.8'

        ipr {
            withXml { provider ->
                def node = provider.asNode()
                node.component.find { it.'@name' == 'VcsDirectoryMappings' }?.mapping[0].'@vcs' = 'Git'
            }
        }
    }
}

repositories {
    mavenLocal()
}

dependencies {
    api "org.kordamp.jipsy:jipsy-processor:${jipsyVersion}"
    annotationProcessor "org.kordamp.jipsy:jipsy-processor:${jipsyVersion}"
    compileOnly "org.codehaus.groovy:groovy:${groovyVersion}"
    testImplementation "org.codehaus.groovy:groovy:${groovyVersion}"
    testImplementation 'junit:junit:4.13.2'
}

compileJava {
    doFirst {
        options.compilerArgs = ['-proc:none']
    }
}
